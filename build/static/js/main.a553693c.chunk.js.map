{"version":3,"sources":["constants/productConstants.js","constants/CartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/CartReducers.js","reducers/userReducer.js","reducers/orderReducer.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/Orderscreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","protoTypes","PropTypes","number","isRequired","string","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","updateProduct","OrderListScreen","About","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a553693c.chunk.js","sourcesContent":["// export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\n// export const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\n// export const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\n// export const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\n// export const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\n// export const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\nexport const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\r\n","// export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST \";\r\n// export const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\n// export const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\n// export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\n// export const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\";\r\n// export const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n// export const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\n// export const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\nexport const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_CLEAR_ITEMS = \"CART_RESET\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","// export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\n// export const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\n// export const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","// import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n// import thunk from \"redux-thunk\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import {\r\n//   productListReducer,\r\n//   productDetailsReducer,\r\n// } from \"./reducers/productReducers\";\r\n// import { cartReducer } from \"./reducers/CartReducers\";\r\n// import {\r\n//   userLoginReducer,\r\n//   userRegisterReducer,\r\n//   userDetailsReducer,\r\n//   userUpdateProfileReducer,\r\n// } from \"./reducers/userReducer\";\r\n// import { orderCreateReducer } from \"./reducers/orderReducer\";\r\n\r\n// const reducer = combineReducers({\r\n//   productList: productListReducer,\r\n//   productDetails: productDetailsReducer,\r\n//   cart: cartReducer,\r\n//   userLogin: userLoginReducer,\r\n//   userRegister: userRegisterReducer,\r\n//   userDetails: userDetailsReducer,\r\n//   userUpdateProfile: userUpdateProfileReducer,\r\n//   orderCreate: orderCreateReducer,\r\n// });\r\n// const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n//   : [];\r\n\r\n// const userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n//   ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n//   : null;\r\n\r\n// const shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n//   ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n//   : {};\r\n\r\n// const initialState = {\r\n//   cart: {\r\n//     cartItems: cartItemsFromStorage,\r\n//     shippingAddress: shippingAddressFromStorage,\r\n//   },\r\n//   userLogin: { userInfo: userInfoFromStorage },\r\n// };\r\n\r\n// const middleware = [thunk];\r\n\r\n// const store = createStore(\r\n//   reducer,\r\n//   initialState,\r\n//   composeWithDevTools(applyMiddleware(...middleware))\r\n// );\r\n\r\n// export default store;\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/CartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from \"./reducers/orderReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","// import {\r\n//   PRODUCT_LIST_REQUEST,\r\n//   PRODUCT_LIST_SUCCESS,\r\n//   PRODUCT_LIST_FAIL,\r\n//   PRODUCT_DETAILS_REQUEST,\r\n//   PRODUCT_DETAILS_SUCCESS,\r\n//   PRODUCT_DETAILS_FAIL,\r\n// } from \"../constants/productConstants\";\r\n\r\n// export const productListReducer = (state = { products: [] }, action) => {\r\n//   switch (action.type) {\r\n//     case PRODUCT_LIST_REQUEST:\r\n//       return { loading: true, products: [] };\r\n//     case PRODUCT_LIST_SUCCESS:\r\n//       return { loading: false, products: action.payload };\r\n//     case PRODUCT_LIST_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const productDetailsReducer = (\r\n//   state = { product: { reviews: [] } },\r\n//   action\r\n// ) => {\r\n//   switch (action.type) {\r\n//     case PRODUCT_DETAILS_REQUEST:\r\n//       return { loading: true, ...state };\r\n//     case PRODUCT_DETAILS_SUCCESS:\r\n//       return { loading: false, product: action.payload };\r\n//     case PRODUCT_DETAILS_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// import {\r\n//   CART_ADD_ITEM,\r\n//   CART_REMOVE_ITEM,\r\n//   CART_SAVE_SHIPPING_ADDRESS,\r\n//   CART_SAVE_PAYMENT_METHOD,\r\n//   CART_CLEAR_ITEMS,\r\n// } from \"../constants/CartConstants\";\r\n\r\n// export const cartReducer = (\r\n//   state = { cartItems: [], shippingAddress: {} },\r\n//   action\r\n// ) => {\r\n//   switch (action.type) {\r\n//     case CART_ADD_ITEM:\r\n//       const item = action.payload;\r\n\r\n//       const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n//       if (existItem) {\r\n//         return {\r\n//           ...state,\r\n//           cartItems: state.cartItems.map((x) =>\r\n//             x.product === existItem.product ? item : x\r\n//           ),\r\n//         };\r\n//       } else {\r\n//         return {\r\n//           ...state,\r\n//           cartItems: [...state.cartItems, item],\r\n//         };\r\n//       }\r\n//     case CART_REMOVE_ITEM:\r\n//       return {\r\n//         ...state,\r\n//         cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n//       };\r\n\r\n//     case CART_SAVE_SHIPPING_ADDRESS:\r\n//       return {\r\n//         ...state,\r\n//         shippingAddress: action.payload,\r\n//       };\r\n\r\n//     case CART_SAVE_PAYMENT_METHOD:\r\n//       return {\r\n//         ...state,\r\n//         paymentMethod: action.payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/CartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// import {\r\n//   USER_DETAILS_FAIL,\r\n//   USER_DETAILS_REQUEST,\r\n//   USER_DETAILS_SUCCESS,\r\n//   USER_LOGIN_FAIL,\r\n//   USER_LOGIN_REQUEST,\r\n//   USER_LOGIN_SUCCESS,\r\n//   USER_LOGOUT,\r\n//   USER_REGISTER_FAIL,\r\n//   USER_REGISTER_REQUEST,\r\n//   USER_REGISTER_SUCCESS,\r\n//   USER_UPDATE_PROFILE_FAIL,\r\n//   USER_UPDATE_PROFILE_REQUEST,\r\n//   USER_UPDATE_PROFILE_SUCCESS,\r\n// } from \"../constants/userConstants\";\r\n\r\n// export const userLoginReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//     case USER_LOGIN_REQUEST:\r\n//       return { loading: true };\r\n//     case USER_LOGIN_SUCCESS:\r\n//       return { loading: false, userInfo: action.payload };\r\n//     case USER_LOGIN_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n\r\n//     case USER_LOGOUT:\r\n//       return {};\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const userRegisterReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//     case USER_REGISTER_REQUEST:\r\n//       return { loading: true };\r\n//     case USER_REGISTER_SUCCESS:\r\n//       return { loading: false, userInfo: action.payload };\r\n//     case USER_REGISTER_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const userDetailsReducer = (state = { user: {} }, action) => {\r\n//   switch (action.type) {\r\n//     case USER_DETAILS_REQUEST:\r\n//       return { ...state, loading: true };\r\n//     case USER_DETAILS_SUCCESS:\r\n//       return { loading: false, user: action.payload };\r\n//     case USER_DETAILS_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const userUpdateProfileReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//     case USER_UPDATE_PROFILE_REQUEST:\r\n//       return { loading: true };\r\n//     case USER_UPDATE_PROFILE_SUCCESS:\r\n//       return { loading: false, success: true, userInfo: action.payload };\r\n//     case USER_UPDATE_PROFILE_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// import {\r\n//   ORDER_CREATE_REQUEST,\r\n//   ORDER_CREATE_SUCCESS,\r\n//   ORDER_CREATE_FAIL,\r\n//   // ORDER_DETAILS_REQUEST,\r\n//   // ORDER_DETAILS_SUCCESS,\r\n//   // ORDER_DETAILS_FAIL,\r\n//   // ORDER_PAY_REQUEST,\r\n//   // ORDER_PAY_FAIL,\r\n//   // ORDER_PAY_SUCCESS,\r\n//   // ORDER_PAY_RESET,\r\n//   // ORDER_LIST_MY_REQUEST,\r\n//   // ORDER_LIST_MY_SUCCESS,\r\n//   // ORDER_LIST_MY_FAIL,\r\n//   // ORDER_LIST_MY_RESET,\r\n//   // ORDER_LIST_FAIL,\r\n//   // ORDER_LIST_SUCCESS,\r\n//   // ORDER_LIST_REQUEST,\r\n//   // ORDER_DELIVER_FAIL,\r\n//   // ORDER_DELIVER_SUCCESS,\r\n//   // ORDER_DELIVER_REQUEST,\r\n//   // ORDER_DELIVER_RESET,\r\n//   //   ORDER_CREATE_RESET,\r\n// } from \"../constants/orderConstants\";\r\n\r\n// export const orderCreateReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//     case ORDER_CREATE_REQUEST:\r\n//       return {\r\n//         loading: true,\r\n//       };\r\n//     case ORDER_CREATE_SUCCESS:\r\n//       return {\r\n//         loading: false,\r\n//         success: true,\r\n//         order: action.payload,\r\n//       };\r\n//     case ORDER_CREATE_FAIL:\r\n//       return {\r\n//         loading: false,\r\n//         error: action.payload,\r\n//       };\r\n\r\n//     // case ORDER_CREATE_RESET:\r\n//     //   return {};\r\n//     // default:\r\n//     //   return state;\r\n//   }\r\n// };\r\n\r\n// //   export const orderDetailsReducer = (\r\n// //     state = { loading: true, orderItems: [], shippingAddress: {} },\r\n// //     action\r\n// //   ) => {\r\n// //     switch (action.type) {\r\n// //       case ORDER_DETAILS_REQUEST:\r\n// //         return {\r\n// //           ...state,\r\n// //           loading: true,\r\n// //         }\r\n// //       case ORDER_DETAILS_SUCCESS:\r\n// //         return {\r\n// //           loading: false,\r\n// //           order: action.payload,\r\n// //         }\r\n// //       case ORDER_DETAILS_FAIL:\r\n// //         return {\r\n// //           loading: false,\r\n// //           error: action.payload,\r\n// //         }\r\n// //       default:\r\n// //         return state\r\n// //     }\r\n// //   }\r\n\r\n// //   export const orderPayReducer = (state = {}, action) => {\r\n// //     switch (action.type) {\r\n// //       case ORDER_PAY_REQUEST:\r\n// //         return {\r\n// //           loading: true,\r\n// //         }\r\n// //       case ORDER_PAY_SUCCESS:\r\n// //         return {\r\n// //           loading: false,\r\n// //           success: true,\r\n// //         }\r\n// //       case ORDER_PAY_FAIL:\r\n// //         return {\r\n// //           loading: false,\r\n// //           error: action.payload,\r\n// //         }\r\n// //       case ORDER_PAY_RESET:\r\n// //         return {}\r\n// //       default:\r\n// //         return state\r\n// //     }\r\n// //   }\r\n\r\n// //   export const orderDeliverReducer = (state = {}, action) => {\r\n// //     switch (action.type) {\r\n// //       case ORDER_DELIVER_REQUEST:\r\n// //         return {\r\n// //           loading: true,\r\n// //         }\r\n// //       case ORDER_DELIVER_SUCCESS:\r\n// //         return {\r\n// //           loading: false,\r\n// //           success: true,\r\n// //         }\r\n// //       case ORDER_DELIVER_FAIL:\r\n// //         return {\r\n// //           loading: false,\r\n// //           error: action.payload,\r\n// //         }\r\n// //       case ORDER_DELIVER_RESET:\r\n// //         return {}\r\n// //       default:\r\n// //         return state\r\n// //     }\r\n// //   }\r\n\r\n// //   export const orderListMyReducer = (state = { orders: [] }, action) => {\r\n// //     switch (action.type) {\r\n// //       case ORDER_LIST_MY_REQUEST:\r\n// //         return {\r\n// //           loading: true,\r\n// //         }\r\n// //       case ORDER_LIST_MY_SUCCESS:\r\n// //         return {\r\n// //           loading: false,\r\n// //           orders: action.payload,\r\n// //         }\r\n// //       case ORDER_LIST_MY_FAIL:\r\n// //         return {\r\n// //           loading: false,\r\n// //           error: action.payload,\r\n// //         }\r\n// //       case ORDER_LIST_MY_RESET:\r\n// //         return { orders: [] }\r\n// //       default:\r\n// //         return state\r\n// //     }\r\n// //   }\r\n\r\n// //   export const orderListReducer = (state = { orders: [] }, action) => {\r\n// //     switch (action.type) {\r\n// //       case ORDER_LIST_REQUEST:\r\n// //         return {\r\n// //           loading: true,\r\n// //         }\r\n// //       case ORDER_LIST_SUCCESS:\r\n// //         return {\r\n// //           loading: false,\r\n// //           orders: action.payload,\r\n// //         }\r\n// //       case ORDER_LIST_FAIL:\r\n// //         return {\r\n// //           loading: false,\r\n// //           error: action.payload,\r\n// //         }\r\n// //       default:\r\n// //         return state\r\n// //     }\r\n// //   }\r\n\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search Products...\"\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","// import axios from \"axios\";\r\n// import {\r\n//   USER_DETAILS_FAIL,\r\n//   USER_DETAILS_REQUEST,\r\n//   USER_DETAILS_SUCCESS,\r\n//   USER_LOGIN_FAIL,\r\n//   USER_LOGIN_REQUEST,\r\n//   USER_LOGIN_SUCCESS,\r\n//   USER_LOGOUT,\r\n//   USER_REGISTER_FAIL,\r\n//   USER_REGISTER_REQUEST,\r\n//   USER_REGISTER_SUCCESS,\r\n//   USER_UPDATE_PROFILE_FAIL,\r\n//   USER_UPDATE_PROFILE_REQUEST,\r\n//   USER_UPDATE_PROFILE_SUCCESS,\r\n// } from \"../constants/userConstants\";\r\n\r\n// export const login = (email, password) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: USER_LOGIN_REQUEST,\r\n//     });\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     };\r\n\r\n//     const { data } = await axios.post(\r\n//       \"/api/users/login\",\r\n//       { email, password },\r\n//       config\r\n//     );\r\n\r\n//     dispatch({\r\n//       type: USER_LOGIN_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n\r\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: USER_LOGIN_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const logout = () => (dispatch) => {\r\n//   localStorage.removeItem(\"userInfo\");\r\n//   dispatch({ type: USER_LOGOUT });\r\n// };\r\n\r\n// export const register = (name, email, password) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: USER_REGISTER_REQUEST,\r\n//     });\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     };\r\n\r\n//     const { data } = await axios.post(\r\n//       \"/api/users\",\r\n//       { name, email, password },\r\n//       config\r\n//     );\r\n\r\n//     dispatch({\r\n//       type: USER_REGISTER_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n\r\n//     dispatch({\r\n//       type: USER_LOGIN_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n\r\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: USER_REGISTER_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const getUserDetails = (id) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: USER_DETAILS_REQUEST,\r\n//     });\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState();\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n//     dispatch({\r\n//       type: USER_DETAILS_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: USER_DETAILS_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: USER_UPDATE_PROFILE_REQUEST,\r\n//     });\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState();\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n//     dispatch({\r\n//       type: USER_UPDATE_PROFILE_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: USER_UPDATE_PROFILE_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"cartItems\");\r\n  localStorage.removeItem(\"shippingAddress\");\r\n  localStorage.removeItem(\"paymentMethod\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  document.location.href = \"/login\";\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <Link to=\"/\">\r\n            <Navbar.Brand className=\"profile\">Mutiu ProShop</Navbar.Brand>\r\n          </Link>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link>\r\n                <Link to=\"/about\" className=\"link\">\r\n                  <i className=\"fas fa-shopping-cart\"></i> About Us\r\n                </Link>\r\n              </Nav.Link>\r\n            </Nav>\r\n\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link>\r\n                <Link to=\"/cart\" className=\"link\">\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Link>\r\n              </Nav.Link>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/profile\" className=\"profile\">\r\n                      Profile\r\n                    </Link>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <Link to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </Link>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <Nav.Link>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/admin/userlist\">Users </Link>\r\n                    </NavDropdown.Item>\r\n                  </Nav.Link>\r\n\r\n                  <Nav.Link>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/admin/productlist\">Products </Link>\r\n                    </NavDropdown.Item>\r\n                  </Nav.Link>\r\n\r\n                  <Nav.Link>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/admin/orderlist\">Orders </Link>\r\n                    </NavDropdown.Item>\r\n                  </Nav.Link>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy;Proshop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fa fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>{\" \"}\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fa fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>{\" \"}\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fa fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>{\" \"}\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fa fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>{\" \"}\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fa fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>{\" \"}\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: \"#f8e825\",\r\n};\r\n\r\nRating.protoTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","// import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Card } from \"react-bootstrap\";\r\n// import Rating from \"./Rating\";\r\n// const Product = ({ product }) => {\r\n//   return (\r\n//     <Card className=\"my-3 p-3 rounded\">\r\n//       <Link to={`/product/${product._id}`}>\r\n//         <Card.Img src={product.image} variant=\"top\" />;\r\n//       </Link>\r\n//       <Card.Body>\r\n//         <Link to={`/product/${product._id}`}>\r\n//           <Card.Title as=\"div\">\r\n//             {\" \"}\r\n//             <strong>{product.name}</strong>\r\n//           </Card.Title>\r\n//         </Link>\r\n//         <Card.Text as=\"div\">\r\n//           <Rating\r\n//             value={product.rating}\r\n//             text={`${product.numReviews} reviews`}\r\n//           />\r\n//         </Card.Text>\r\n//         <Card.Text as=\"h3\"> $ {product.price}</Card.Text>\r\n//       </Card.Body>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n// export default Product;\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <span className=\"sr-only\"> Loading.....</span>{\" \"}\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","// import axios from \"axios\";\r\n// import {\r\n//   PRODUCT_LIST_REQUEST,\r\n//   PRODUCT_LIST_SUCCESS,\r\n//   PRODUCT_LIST_FAIL,\r\n//   PRODUCT_DETAILS_REQUEST,\r\n//   PRODUCT_DETAILS_SUCCESS,\r\n//   PRODUCT_DETAILS_FAIL,\r\n// } from \"../constants/productConstants\";\r\n\r\n// export const listProducts = () => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n//     const { data } = await axios.get(\"/api/products\");\r\n\r\n//     dispatch({\r\n//       type: PRODUCT_LIST_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: PRODUCT_LIST_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const listProductDetails = (id) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n//     const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n//     dispatch({\r\n//       type: PRODUCT_DETAILS_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: PRODUCT_DETAILS_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listProducts =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport { listTopProducts } from \"../actions/productActions\";\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className=\"carousel-caption\">\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keyword\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Welcome To ProShop\",\r\n  description: \"We sell the best products for cheap\",\r\n  keywords: \"electronics, buy electronics, cheap electroincs\",\r\n};\r\n\r\nexport default Meta;\r\n","// import React, { useEffect } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { Row, Col } from \"react-bootstrap\";\r\n// import Product from \"../components/Product\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// // import Products from \"../components/Products\";\r\n// // import axios from \"axios\";\r\n// import { listProducts } from \"../actions/productActions\";\r\n\r\n// const HomeScreen = () => {\r\n//   // const [Products, setProducts] = useState([]);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const productList = useSelector((state) => state.productList);\r\n\r\n//   const { loading, error, products } = productList;\r\n\r\n//   useEffect(() => {\r\n//     dispatch(listProducts());\r\n//     // const fetchProducts = async () => {\r\n//     //   const { data } = await axios.get(\"/api/products\");\r\n\r\n//     //   setProducts(data);\r\n//     // };\r\n\r\n//     // fetchProducts();\r\n//   }, [dispatch]);\r\n\r\n//   // const products = [];\r\n\r\n//   return (\r\n//     <>\r\n//       <h1>Latest Products </h1>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\"> {error} </Message>\r\n//       ) : (\r\n//         <Row>\r\n//           {products.map((product) => (\r\n//             <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n//               <Product product={product} />\r\n//             </Col>\r\n//           ))}\r\n//         </Row>\r\n//       )}\r\n//       {/* <Row>\r\n//         {products.map((product) => (\r\n//           <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n//             <Product product={product} />\r\n//           </Col>\r\n//         ))}\r\n//       </Row> */}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default HomeScreen;\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport Meta from \"../components/Meta\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword;\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to=\"/\" className=\"btn btn-light\">\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   Row,\r\n//   Col,\r\n//   Image,\r\n//   ListGroup,\r\n//   Card,\r\n//   // Button,\r\n//   // ListGroupItem,\r\n//   Form,\r\n// } from \"react-bootstrap\";\r\n// import Rating from \"../components/Rating\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import { listProductDetails } from \"../actions/productActions\";\r\n\r\n// // import axios from \"axios\";\r\n// // import Products from \"../components/Products\";\r\n\r\n// const ProductScreen = ({ history, match }) => {\r\n//   // const Product = Products.find((P) => P._id === match.params.id);\r\n//   // const [Product, setProduct] = useState({});\r\n\r\n//   const [qty, setQty] = useState(1);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const productDetails = useSelector((state) => state.productDetails);\r\n//   const { loading, error, product } = productDetails;\r\n\r\n//   useEffect(() => {\r\n//     dispatch(listProductDetails(match.params.id));\r\n//     // const fetchProduct = async () => {\r\n//     //   const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n\r\n//     //   setProduct(data);\r\n//     // };\r\n\r\n//     // fetchProduct();\r\n//   }, [dispatch, match]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\r\n//         {\" \"}\r\n//         Previous Page{\" \"}\r\n//       </Link>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <Row>\r\n//           <Col md={6}>\r\n//             <Image src={product.image} alt={product.name} fluid />\r\n//           </Col>\r\n//           <Col md={3}>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <h2>{product.name}</h2>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Rating\r\n//                   value={product.rating}\r\n//                   text={`${product.numReviews} reviews`}\r\n//                 />\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 {\" \"}\r\n//                 <strong>Price:</strong> ${product.price}\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <strong>Description:</strong> {product.description}\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Col>\r\n\r\n//           <Col md={3}>\r\n//             <Card>\r\n//               <ListGroup variant=\"flush\">\r\n//                 <ListGroup.Item>\r\n//                   <Row>\r\n//                     <Col>price</Col>\r\n//                     <Col>\r\n//                       <strong>${product.price}</strong>\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </ListGroup.Item>\r\n//                 <ListGroup.Item>\r\n//                   <Row>\r\n//                     <Col>Status</Col>\r\n//                     <Col>\r\n//                       {product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </ListGroup.Item>\r\n\r\n//                 {product.countInStock > 0 && (\r\n//                   <ListGroup.Item>\r\n//                     <Row>\r\n//                       <Col>Qty</Col>\r\n//                       <Col>\r\n//                         <Form.Control\r\n//                           as=\"select\"\r\n//                           value={qty}\r\n//                           onChange={(e) => setQty(e.target.value)}\r\n//                         >\r\n//                           {[...Array(product.countInStock).keys()].map((x) => (\r\n//                             <option key={x + 1} value={x + 1}>\r\n//                               {x + 1}\r\n//                             </option>\r\n//                           ))}\r\n//                         </Form.Control>\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </ListGroup.Item>\r\n//                 )}\r\n\r\n//                 <ListGroup.Item>\r\n//                   <button\r\n//                     onClick={addToCartHandler}\r\n//                     style={{\r\n//                       backgroundColor: \"black\",\r\n//                       color: \"white\",\r\n//                       width: \"100%\",\r\n//                       padding: \"10px 0 \",\r\n//                     }}\r\n//                     disabled={product.countInStock === 0}\r\n//                   >\r\n//                     Add To Cart\r\n//                   </button>\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Card>\r\n//           </Col>\r\n//         </Row>\r\n//       )}\r\n//       {/*\r\n//       <Row>\r\n//         <Col md={6}>\r\n//           <Image src={Product.image} alt={Product.name} fluid />\r\n//         </Col>\r\n//         <Col md={3}>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>{Product.name}</h2>\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <Rating\r\n//                 value={Product.rating}\r\n//                 text={`${Product.numReviews} reviews`}\r\n//               />\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               {\" \"}\r\n//               <strong>Price:</strong> ${Product.price}\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <strong>Description:</strong> {Product.description}\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Col>\r\n\r\n//         <Col md={3}>\r\n//           <Card>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>price</Col>\r\n//                   <Col>\r\n//                     <strong>${Product.price}</strong>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Status</Col>\r\n//                   <Col>\r\n//                     {Product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <button\r\n//                   style={{\r\n//                     backgroundColor: \"black\",\r\n//                     color: \"white\",\r\n//                     width: \"100%\",\r\n//                     padding: \"10px 0 \",\r\n//                   }}\r\n//                   disabled={Product.countInStock === 0}\r\n//                 >\r\n//                   Add To Cart\r\n//                 </button>\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row> */}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProductScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","// import axios from \"axios\";\r\n// import {\r\n//   CART_ADD_ITEM,\r\n//   CART_REMOVE_ITEM,\r\n//   CART_SAVE_SHIPPING_ADDRESS,\r\n//   CART_SAVE_PAYMENT_METHOD,\r\n// } from \"../constants/cartConstants\";\r\n\r\n// export const addToCart = (id, qty) => async (dispatch, getState) => {\r\n//   const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n//   dispatch({\r\n//     type: CART_ADD_ITEM,\r\n//     payload: {\r\n//       product: data._id,\r\n//       name: data.name,\r\n//       image: data.image,\r\n//       price: data.price,\r\n//       countInStock: data.countInStock,\r\n//       qty,\r\n//     },\r\n//   });\r\n\r\n//   localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n// };\r\n\r\n// export const removeFromCart = (id) => (dispatch, getState) => {\r\n//   dispatch({\r\n//     type: CART_REMOVE_ITEM,\r\n//     payload: id,\r\n//   });\r\n\r\n//   localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n// };\r\n\r\n// export const saveShippingAddress = (data) => (dispatch) => {\r\n//   dispatch({\r\n//     type: CART_SAVE_SHIPPING_ADDRESS,\r\n//     payload: data,\r\n//   });\r\n\r\n//   localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n// };\r\n\r\n// export const savePaymentMethod = (data) => (dispatch) => {\r\n//   dispatch({\r\n//     type: CART_SAVE_PAYMENT_METHOD,\r\n//     payload: data,\r\n//   });\r\n\r\n//   localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n// };\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/CartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","// import React, { useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   Row,\r\n//   Col,\r\n//   ListGroup,\r\n//   Image,\r\n//   Form,\r\n//   Button,\r\n//   Card,\r\n// } from \"react-bootstrap\";\r\n// import Message from \"../components/Message\";\r\n// import { addToCart, removeFromCart } from \"../actions/cartAction\";\r\n\r\n// const CartScreen = ({ match, location, history }) => {\r\n//   const productId = match.params.id;\r\n\r\n//   const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const cart = useSelector((state) => state.cart);\r\n//   const { cartItems } = cart;\r\n//   console.log(cartItems);\r\n\r\n//   useEffect(() => {\r\n//     if (productId) {\r\n//       dispatch(addToCart(productId, qty));\r\n//     }\r\n//   }, [dispatch, productId, qty]);\r\n\r\n//   const removeFromCartHandler = (id) => {\r\n//     dispatch(removeFromCart(id));\r\n//   };\r\n\r\n//   const checkoutHandler = () => {\r\n//     history.push(\"/login?redirect=shipping\");\r\n//   };\r\n//   return (\r\n//     <Row>\r\n//       <Col md={8}>\r\n//         <h1>Shopping Cart</h1>\r\n//         {cartItems.length === 0 ? (\r\n//           <Message>\r\n//             Your cart is empty <Link to=\"/\">Go Back</Link>\r\n//           </Message>\r\n//         ) : (\r\n//           <ListGroup variant=\"flush\">\r\n//             {cartItems.map((item) => (\r\n//               <ListGroup.Item key={item.product}>\r\n//                 <Row>\r\n//                   <Col md={2}>\r\n//                     <Image src={item.image} alt={item.name} fluid rounded />\r\n//                   </Col>\r\n//                   <Col md={3}>\r\n//                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n//                   </Col>\r\n//                   <Col md={2}>${item.price}</Col>\r\n//                   <Col md={2}>\r\n//                     <Form.Control\r\n//                       as=\"select\"\r\n//                       value={item.qty}\r\n//                       onChange={(e) =>\r\n//                         dispatch(\r\n//                           addToCart(item.product, Number(e.target.value))\r\n//                         )\r\n//                       }\r\n//                     >\r\n//                       {[...Array(item.countInStock).keys()].map((x) => (\r\n//                         <option key={x + 1} value={x + 1}>\r\n//                           {x + 1}\r\n//                         </option>\r\n//                       ))}\r\n//                     </Form.Control>\r\n//                   </Col>\r\n//                   <Col md={2}>\r\n//                     <Button\r\n//                       type=\"button\"\r\n//                       variant=\"light\"\r\n//                       onClick={() => removeFromCartHandler(item.product)}\r\n//                     >\r\n//                       <i className=\"fas fa-trash\"></i>\r\n//                     </Button>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//             ))}\r\n//           </ListGroup>\r\n//         )}\r\n//       </Col>\r\n//       <Col md={4}>\r\n//         <Card>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>\r\n//                 Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n//                 items\r\n//               </h2>\r\n//               $\r\n//               {cartItems\r\n//                 .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n//                 .toFixed(2)}\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <Button\r\n//                 type=\"button\"\r\n//                 className=\"btn-block\"\r\n//                 disabled={cartItems.length === 0}\r\n//                 onClick={checkoutHandler}\r\n//               >\r\n//                 Proceed To Checkout\r\n//               </Button>\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Card>\r\n//       </Col>\r\n//     </Row>\r\n//   );\r\n// };\r\n\r\n// export default CartScreen;\r\n\r\n// //   return (\r\n// //     <Row>\r\n// //       <Col md={8}>\r\n// //         <h1>Shopping Cart</h1>\r\n// //         {cartItems.length === 0 ? (\r\n// //           <Message>\r\n// //             Your cart is empty <Link to=\"/\">Go Back</Link>{\" \"}\r\n// //           </Message>\r\n// //         ) : (\r\n// //           <ListGroup variant=\"flush\">\r\n// //             {cartItems.map((item) => (\r\n// //               <ListGroup.Item key={item.product}>\r\n// //                 <Row>\r\n// //                   <Col md={2}>\r\n// //                     <Image src={item.image} alt={item.name} fluid rounded />\r\n// //                   </Col>\r\n// //                   <Col md={3}>\r\n// //                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n// //                   </Col>\r\n// //                   <Col md={2}> ${item.price} </Col>\r\n// //                   <Col md={2}>\r\n// //                     <Form.Control\r\n// //                       as=\"select\"\r\n// //                       value={item.qty}\r\n// //                       onChange={(e) =>\r\n// //                         dispatch(\r\n// //                           addToCart(item.product, Number(e.target.value))\r\n// //                         )\r\n// //                       }\r\n// //                     >\r\n// //                       {[...Array(item.countInStock).keys()].map((x) => (\r\n// //                         <option key={x + 1} value={x + 1}>\r\n// //                           {x + 1}\r\n// //                         </option>\r\n// //                       ))}\r\n// //                     </Form.Control>\r\n// //                   </Col>\r\n\r\n// //                   <Col md={2}>\r\n// //                     <Button\r\n// //                       type=\"button\"\r\n// //                       variant=\"Light\"\r\n// //                       onClick={() => removeFromCartHandler(item.product)}\r\n// //                     >\r\n// //                       <i className=\"fas fa-trash\"></i>\r\n// //                     </Button>\r\n// //                   </Col>\r\n// //                 </Row>\r\n// //               </ListGroup.Item>\r\n// //             ))}\r\n// //           </ListGroup>\r\n// //         )}\r\n// //       </Col>\r\n// //       <Col md={4}>\r\n// //         <Card>\r\n// //           <ListGroup.Item></ListGroup.Item>\r\n// //         </Card>\r\n// //       </Col>\r\n// //     </Row>\r\n// //   );\r\n// // };\r\n\r\n// // export default CartScreen;\r\n\r\n// // import React, { useEffect } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// // import { useDispatch, useSelector } from \"react-redux\";\r\n// // import {\r\n// //   Row,\r\n// //   Col,\r\n// //   ListGroup,\r\n// //   Image,\r\n// //   Form,\r\n// //   Button,\r\n// //   Card,\r\n// // } from \"react-bootstrap\";\r\n// // import Message from \"../components/Message\";\r\n// // import { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\n// // const CartScreen = ({ match, location, history }) => {\r\n// //   const productId = match.params.id;\r\n\r\n// //   const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n// //   const dispatch = useDispatch();\r\n\r\n// //   const cart = useSelector((state) => state.cart);\r\n// //   const { cartItems } = cart;\r\n\r\n// //   useEffect(() => {\r\n// //     if (productId) {\r\n// //       dispatch(addToCart(productId, qty));\r\n// //     }\r\n// //   }, [dispatch, productId, qty]);\r\n\r\n// //   const removeFromCartHandler = (id) => {\r\n// //     dispatch(removeFromCart(id));\r\n// //   };\r\n\r\n// //   const checkoutHandler = () => {\r\n// //     history.push(\"/login?redirect=shipping\");\r\n// //   };\r\n\r\n// //   return (\r\n// //     <Row>\r\n// //       <Col md={8}>\r\n// //         <h1>Shopping Cart</h1>\r\n// //         {cartItems.length === 0 ? (\r\n// //           <Message>\r\n// //             Your cart is empty <Link to=\"/\">Go Back</Link>\r\n// //           </Message>\r\n// //         ) : (\r\n// //           <ListGroup variant=\"flush\">\r\n// //             {cartItems.map((item) => (\r\n// //               <ListGroup.Item key={item.product}>\r\n// //                 <Row>\r\n// //                   <Col md={2}>\r\n// //                     <Image src={item.image} alt={item.name} fluid rounded />\r\n// //                   </Col>\r\n// //                   <Col md={3}>\r\n// //                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n// //                   </Col>\r\n// //                   <Col md={2}>${item.price}</Col>\r\n// //                   <Col md={2}>\r\n// //                     <Form.Control\r\n// //                       as=\"select\"\r\n// //                       value={item.qty}\r\n// //                       onChange={(e) =>\r\n// //                         dispatch(\r\n// //                           addToCart(item.product, Number(e.target.value))\r\n// //                         )\r\n// //                       }\r\n// //                     >\r\n// //                       {[...Array(item.countInStock).keys()].map((x) => (\r\n// //                         <option key={x + 1} value={x + 1}>\r\n// //                           {x + 1}\r\n// //                         </option>\r\n// //                       ))}\r\n// //                     </Form.Control>\r\n// //                   </Col>\r\n// //                   <Col md={2}>\r\n// //                     <Button\r\n// //                       type=\"button\"\r\n// //                       variant=\"light\"\r\n// //                       onClick={() => removeFromCartHandler(item.product)}\r\n// //                     >\r\n// //                       <i className=\"fas fa-trash\"></i>\r\n// //                     </Button>\r\n// //                   </Col>\r\n// //                 </Row>\r\n// //               </ListGroup.Item>\r\n// //             ))}\r\n// //           </ListGroup>\r\n// //         )}\r\n// //       </Col>\r\n// //       <Col md={4}>\r\n// //         <Card>\r\n// //           <ListGroup variant=\"flush\">\r\n// //             <ListGroup.Item>\r\n// //               <h2>\r\n// //                 Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n// //                 items\r\n// //               </h2>\r\n// //               $\r\n// //               {cartItems\r\n// //                 .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n// //                 .toFixed(2)}\r\n// //             </ListGroup.Item>\r\n// //             <ListGroup.Item>\r\n// //               <Button\r\n// //                 type=\"button\"\r\n// //                 className=\"btn-block\"\r\n// //                 disabled={cartItems.length === 0}\r\n// //                 onClick={checkoutHandler}\r\n// //               >\r\n// //                 Proceed To Checkout\r\n// //               </Button>\r\n// //             </ListGroup.Item>\r\n// //           </ListGroup>\r\n// //         </Card>\r\n// //       </Col>\r\n// //     </Row>\r\n// //   );\r\n// // };\r\n\r\n// // export default CartScreen;\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart, cartAction } from \"../actions/cartAction\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","// // import React, { useState, useEffect } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// // import { Form, Button, Row, Col } from \"react-bootstrap\";\r\n// // import { useDispatch, useSelector } from \"react-redux\";\r\n// // import Message from \"../components/Message\";\r\n// // import Loader from \"../components/Loader\";\r\n// // import FormContainer from \"../components/FormContainer\";\r\n\r\n// // import { login } from \"../actions/userActions\";\r\n\r\n// // const LoginScreen = () => {\r\n\r\n// //     const [email, setEmail] = useState('')\r\n// //     const [password, setPassword] = useState('')\r\n\r\n// //   return <FormContainer>\r\n// //       <h1>Sign In</h1>\r\n// //   </FormContainer>;\r\n// // };\r\n\r\n// // export default LoginScreen;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import FormContainer from \"../components/FormContainer\";\r\n// import { login } from \"../actions/userActions\";\r\n\r\n// const LoginScreen = ({ location, history }) => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { loading, error, userInfo } = userLogin;\r\n\r\n//   const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n//   useEffect(() => {\r\n//     if (userInfo) {\r\n//       history.push(redirect);\r\n//     }\r\n//   }, [history, userInfo, redirect]);\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(login(email, password));\r\n//   };\r\n\r\n//   return (\r\n//     <FormContainer>\r\n//       <h1>Sign In</h1>\r\n//       {error && <Message variant=\"danger\">{error}</Message>}\r\n//       {loading && <Loader />}\r\n//       <Form onSubmit={submitHandler}>\r\n//         <Form.Group controlId=\"email\">\r\n//           <Form.Label>Email Address</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             placeholder=\"Enter email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"password\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Enter password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Button type=\"submit\" variant=\"primary\">\r\n//           Sign In\r\n//         </Button>\r\n//       </Form>\r\n\r\n//       <Row className=\"py-3\">\r\n//         <Col>\r\n//           New Customer?{\" \"}\r\n//           <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n//             Register\r\n//           </Link>\r\n//         </Col>\r\n//       </Row>\r\n//     </FormContainer>\r\n//   );\r\n// };\r\n\r\n// export default LoginScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","// // import React, { useState, useEffect } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// // import { Form, Button, Row, Col } from \"react-bootstrap\";\r\n// // import { useDispatch, useSelector } from \"react-redux\";\r\n// // import Message from \"../components/Message\";\r\n// // import Loader from \"../components/Loader\";\r\n// // import FormContainer from \"../components/FormContainer\";\r\n\r\n// // import { login } from \"../actions/userActions\";\r\n\r\n// // const LoginScreen = () => {\r\n\r\n// //     const [email, setEmail] = useState('')\r\n// //     const [password, setPassword] = useState('')\r\n\r\n// //   return <FormContainer>\r\n// //       <h1>Sign In</h1>\r\n// //   </FormContainer>;\r\n// // };\r\n\r\n// // export default LoginScreen;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import FormContainer from \"../components/FormContainer\";\r\n// import { register } from \"../actions/userActions\";\r\n\r\n// const RegisterScreen = ({ location, history }) => {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [message, setMessage] = useState(null);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const userRegister = useSelector((state) => state.userRegister);\r\n//   const { loading, error, userInfo } = userRegister;\r\n\r\n//   const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n//   useEffect(() => {\r\n//     if (userInfo) {\r\n//       history.push(redirect);\r\n//     }\r\n//   }, [history, userInfo, redirect]);\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (password !== confirmPassword) {\r\n//       setMessage(\"Password does not match\");\r\n//     } else {\r\n//       dispatch(register(name, email, password));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <FormContainer>\r\n//       <h1>Sign up</h1>\r\n//       {message && <Message variant=\"danger\">{message}</Message>}\r\n//       {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n//       {loading && <Loader />}\r\n//       <Form onSubmit={submitHandler}>\r\n//         <Form.Group controlId=\"name\">\r\n//           <Form.Label>Name</Form.Label>\r\n//           <Form.Control\r\n//             type=\"name\"\r\n//             placeholder=\"Enter name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"email\">\r\n//           <Form.Label>Email Address</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             placeholder=\"Enter email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"password\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Enter password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"confirmPassword\">\r\n//           <Form.Label> Confirm Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Confirm password\"\r\n//             value={confirmPassword}\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Button type=\"submit\" variant=\"primary\">\r\n//           Register\r\n//         </Button>\r\n//       </Form>\r\n\r\n//       <Row className=\"py-3\">\r\n//         <Col>\r\n//           Have an Account?{\" \"}\r\n//           <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n//             login\r\n//           </Link>\r\n//         </Col>\r\n//       </Row>\r\n//     </FormContainer>\r\n//   );\r\n// };\r\n\r\n// export default RegisterScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","// import React, { useState, useEffect } from \"react\";\r\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\n\r\n// const ProfileScreen = ({ location, history }) => {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [message, setMessage] = useState(null);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const userDetails = useSelector((state) => state.userDetails);\r\n//   const { loading, error, user } = userDetails;\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { userInfo } = userLogin;\r\n\r\n//   const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n//   const { success } = userUpdateProfile;\r\n\r\n//   useEffect(() => {\r\n//     if (!userInfo) {\r\n//       history.push(\"/login\");\r\n//     } else {\r\n//       if (!user.name) {\r\n//         dispatch(getUserDetails(\"Profile\"));\r\n//       } else {\r\n//         setName(user.name);\r\n//         setEmail(user.email);\r\n//       }\r\n//     }\r\n//   }, [dispatch, history, userInfo, user]);\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (password !== confirmPassword) {\r\n//       setMessage(\"Password does not match\");\r\n//     } else {\r\n//       dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Row>\r\n//       <Col md={3}>\r\n//         <h2>User Profile</h2>\r\n//         {message && <Message variant=\"danger\">{message}</Message>}\r\n//         {error && <Message variant=\"danger\">{error}</Message>}\r\n//         {success && <Message variant=\"success\">Profile Updated</Message>}\r\n\r\n//         {loading && <Loader />}\r\n//         <Form onSubmit={submitHandler}>\r\n//           <Form.Group controlId=\"name\">\r\n//             <Form.Label>Name</Form.Label>\r\n//             <Form.Control\r\n//               type=\"name\"\r\n//               placeholder=\"Enter name\"\r\n//               value={name}\r\n//               onChange={(e) => setName(e.target.value)}\r\n//             ></Form.Control>\r\n//           </Form.Group>\r\n\r\n//           <Form.Group controlId=\"email\">\r\n//             <Form.Label>Email Address</Form.Label>\r\n//             <Form.Control\r\n//               type=\"email\"\r\n//               placeholder=\"Enter email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             ></Form.Control>\r\n//           </Form.Group>\r\n\r\n//           <Form.Group controlId=\"password\">\r\n//             <Form.Label>Password</Form.Label>\r\n//             <Form.Control\r\n//               type=\"password\"\r\n//               placeholder=\"Enter password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             ></Form.Control>\r\n//           </Form.Group>\r\n\r\n//           <Form.Group controlId=\"confirmPassword\">\r\n//             <Form.Label> Confirm Password</Form.Label>\r\n//             <Form.Control\r\n//               type=\"password\"\r\n//               placeholder=\"Confirm password\"\r\n//               value={confirmPassword}\r\n//               onChange={(e) => setConfirmPassword(e.target.value)}\r\n//             ></Form.Control>\r\n//           </Form.Group>\r\n\r\n//           <Button type=\"submit\" variant=\"primary\">\r\n//             Update\r\n//           </Button>\r\n//         </Form>\r\n//       </Col>\r\n//       <Col md={9}>\r\n//         <h2> My Orders </h2>\r\n//       </Col>\r\n//     </Row>\r\n//   );\r\n// };\r\n\r\n// export default ProfileScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderAction\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <Link to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","// import axios from \"axios\";\r\n// import { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n// // import {\r\n// //   ORDER_CREATE_REQUEST,\r\n// //   ORDER_CREATE_SUCCESS,\r\n// //   ORDER_CREATE_FAIL,\r\n\r\n// // } from \"../constants/orderConstants\";\r\n// import { logout } from \"./userActions\";\r\n\r\n// export const createOrder = (order) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ORDER_CREATE_REQUEST,\r\n//     });\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState();\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n//     dispatch({\r\n//       type: ORDER_CREATE_SUCCESS,\r\n//       payload: data,\r\n//     });\r\n//     dispatch({\r\n//       type: CART_CLEAR_ITEMS,\r\n//       payload: data,\r\n//     });\r\n//     localStorage.removeItem(\"cartItems\");\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message;\r\n//     if (message === \"Not authorized, token failed\") {\r\n//       dispatch(logout());\r\n//     }\r\n//     dispatch({\r\n//       type: ORDER_CREATE_FAIL,\r\n//       payload: message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const getOrderDetails = (id) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ORDER_DETAILS_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n//     dispatch({\r\n//       type: ORDER_DETAILS_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: ORDER_DETAILS_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const payOrder = (orderId, paymentResult) => async (\r\n//   dispatch,\r\n//   getState\r\n// ) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ORDER_PAY_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.put(\r\n//       `/api/orders/${orderId}/pay`,\r\n//       paymentResult,\r\n//       config\r\n//     )\r\n\r\n//     dispatch({\r\n//       type: ORDER_PAY_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: ORDER_PAY_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const deliverOrder = (order) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ORDER_DELIVER_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.put(\r\n//       `/api/orders/${order._id}/deliver`,\r\n//       {},\r\n//       config\r\n//     )\r\n\r\n//     dispatch({\r\n//       type: ORDER_DELIVER_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: ORDER_DELIVER_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const listMyOrders = () => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ORDER_LIST_MY_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n//     dispatch({\r\n//       type: ORDER_LIST_MY_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: ORDER_LIST_MY_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const listOrders = () => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ORDER_LIST_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.get(`/api/orders`, config)\r\n\r\n//     dispatch({\r\n//       type: ORDER_LIST_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: ORDER_LIST_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n\r\nimport axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/CartConstants\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from \"../constants/orderConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","// import React from \"react\";\r\n// import { Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n// // import { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n// const CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n//   return (\r\n//     <Nav className=\"justify-content-center mb-4\">\r\n//       <Nav.Item>\r\n//         {step1 ? (\r\n//           <Link to=\"/login\">\r\n//             <Nav.Link>Sign In</Nav.Link>\r\n//           </Link>\r\n//         ) : (\r\n//           <Nav.Link disabled>Sign In</Nav.Link>\r\n//         )}\r\n//       </Nav.Item>\r\n\r\n//       <Nav.Item>\r\n//         {step2 ? (\r\n//           <Link to=\"/shipping\">\r\n//             <Nav.Link>Shipping</Nav.Link>\r\n//           </Link>\r\n//         ) : (\r\n//           <Nav.Link disabled>Shipping</Nav.Link>\r\n//         )}\r\n//       </Nav.Item>\r\n\r\n//       <Nav.Item>\r\n//         {step3 ? (\r\n//           <Link to=\"/payment\">\r\n//             <Nav.Link>Payment</Nav.Link>\r\n//           </Link>\r\n//         ) : (\r\n//           <Nav.Link disabled>Payment</Nav.Link>\r\n//         )}\r\n//       </Nav.Item>\r\n\r\n//       <Nav.Item>\r\n//         {step4 ? (\r\n//           <Link to=\"/placeorder\">\r\n//             <Nav.Link>Place Order</Nav.Link>\r\n//           </Link>\r\n//         ) : (\r\n//           <Nav.Link disabled>Place Order</Nav.Link>\r\n//         )}\r\n//       </Nav.Item>\r\n//     </Nav>\r\n//   );\r\n// };\r\n\r\n// export default CheckoutSteps;\r\n\r\nimport React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartAction\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","// import React, { useState } from \"react\";\r\n// import { Form, Button, Col } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { savePaymentMethod } from \"../actions/cartAction\";\r\n// import FormContainer from \"../components/FormContainer\";\r\n// import CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\n// const PaymentScreen = ({ history }) => {\r\n//   const cart = useSelector((state) => state.cart);\r\n//   const { shippingAddress } = cart;\r\n\r\n//   if (!shippingAddress.address) {\r\n//     history.push(\"/shipping\");\r\n//   }\r\n\r\n//   const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(savePaymentMethod(paymentMethod));\r\n//     history.push(\"/placeorder\");\r\n//   };\r\n\r\n//   return (\r\n//     <FormContainer>\r\n//       <CheckoutSteps step1 step2 step3 />\r\n//       <h1>Payment Method</h1>\r\n//       <Form onSubmit={submitHandler}>\r\n//         <Form.Group>\r\n//           <Form.Label as=\"legend\">Select Method</Form.Label>\r\n//           <Col>\r\n//             <Form.Check\r\n//               type=\"radio\"\r\n//               label=\"PayPal or Credit Card\"\r\n//               id=\"PayPal\"\r\n//               name=\"paymentMethod\"\r\n//               value=\"PayPal\"\r\n//               checked\r\n//               onChange={(e) => setPaymentMethod(e.target.value)}\r\n//             ></Form.Check>\r\n//             {\r\n//               // <Form.Check\r\n//               //   type=\"radio\"\r\n//               //   label=\"Stripe\"\r\n//               //   id=\"Stripe\"\r\n//               //   name=\"paymentMethod\"\r\n//               //   value=\"Stripe\"\r\n//               //   onChange={(e) => setPaymentMethod(e.target.value)}\r\n//               // ></Form.Check>\r\n//             }\r\n//           </Col>\r\n//         </Form.Group>\r\n\r\n//         <Button type=\"submit\" variant=\"primary\">\r\n//           Continue\r\n//         </Button>\r\n//       </Form>\r\n//     </FormContainer>\r\n//   );\r\n// };\r\n\r\n// export default PaymentScreen;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartAction\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","// import React, { useState } from \"react\";\r\n// import { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../components/Message\";\r\n// import CheckoutSteps from \"../components/CheckoutSteps\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { createOrder } from \"../actions/orderAction\";\r\n\r\n// const PlaceOrderScreen = () => {\r\n//   const dispatch = useDispatch();\r\n//   const cart = useSelector((state) => state.cart);\r\n\r\n//   // calculate prices\r\n\r\n//   const addDecimals = (num) => {\r\n//     return (Math.round(num * 100) / 100).toFixed(2);\r\n//   };\r\n\r\n//   cart.itemsPrices = cart.cartItems.reduce(\r\n//     (acc, item) => acc + item.price * item.qty,\r\n//     0\r\n//   );\r\n//   cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n//   cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n//   cart.totalPrice = (\r\n//     Number(cart.itemsPrice) +\r\n//     Number(cart.shippingPrice) +\r\n//     Number(cart.taxPrice)\r\n//   ).toFixed(2);\r\n\r\n//   const placeOrderHandler = () => {\r\n//     dispatch(\r\n//       createOrder({\r\n//         orderItems: cart.cartItems,\r\n//         shippingAddress: cart.shippingAddress,\r\n//         paymentMethod: cart.paymentMethod,\r\n//         itemsPrice: cart.itemsPrice,\r\n//         shippingPrice: cart.shippingPrice,\r\n//         taxPrice: cart.taxPrice,\r\n//         totalPrice: cart.totalPrice,\r\n//       })\r\n//     );\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n//       <Row>\r\n//         <Col md={8}>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>Shipping</h2>\r\n//               <p>\r\n//                 <strong>Address</strong>\r\n//                 {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n//                 {cart.shippingAddress.postalCode},{\" \"}\r\n//                 {cart.shippingAddress.country}\r\n//               </p>\r\n//             </ListGroup.Item>\r\n\r\n//             <ListGroup.Item>\r\n//               <h2>payment Method</h2>\r\n//               <strong>Method: </strong>\r\n//               {cart.paymentMethod}\r\n//             </ListGroup.Item>\r\n\r\n//             <ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <h2>Order Items</h2>\r\n//                 {cart.cartItems.length === 0 ? (\r\n//                   <Message>Your cart is empty</Message>\r\n//                 ) : (\r\n//                   <ListGroup variant=\"flush\">\r\n//                     {cart.cartItems.map((item, index) => (\r\n//                       <ListGroup.Item key={index}>\r\n//                         <Row>\r\n//                           <Col md={1}>\r\n//                             <Image\r\n//                               src={item.image}\r\n//                               alt={item.name}\r\n//                               fluid\r\n//                               rounded\r\n//                             />\r\n//                           </Col>\r\n//                           <Col>\r\n//                             <Link to={`/product/${item.product}`}>\r\n//                               {item.name}\r\n//                             </Link>\r\n//                           </Col>\r\n//                           <Col md={4}>\r\n//                             {item.qty} x ${item.price} = $\r\n//                             {item.qty * item.price}\r\n//                           </Col>\r\n//                         </Row>\r\n//                       </ListGroup.Item>\r\n//                     ))}\r\n//                   </ListGroup>\r\n//                 )}\r\n//               </ListGroup.Item>\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Col>\r\n\r\n//         <Col md={4}>\r\n//           <Card>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <h2>Order Summary</h2>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Items</Col>\r\n//                   <Col>${cart.itemsPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Shipping</Col>\r\n//                   <Col>${cart.shippingPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Tax</Col>\r\n//                   <Col>${cart.taxPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Total</Col>\r\n//                   <Col>${cart.totalPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               {/* <ListGroup.Item>\r\n//                 {error && <Message variant=\"danger\">{error}</Message>}\r\n//               </ListGroup.Item> */}\r\n//               <ListGroup.Item>\r\n//                 <Button\r\n//                   type=\"button\"\r\n//                   className=\"btn-block\"\r\n//                   disabled={cart.cartItems === 0}\r\n//                   onClick={placeOrderHandler}\r\n//                 >\r\n//                   Place Order\r\n//                 </Button>\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default PlaceOrderScreen;\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderAction\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  } else if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderAction\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <Link to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </Link>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <Link to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </Link>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group> */}\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Image Link\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter countInStock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../actions/orderAction\";\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <Link to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"our-team\">\r\n      <div className=\"teams\">\r\n        <div className=\"who\"> WHO ARE WE </div>\r\n        <div className=\"team\"> Our Team </div>\r\n        <div className=\"para\">\r\n          {\" \"}\r\n          Our long history of unparalleled commitment to partnering with the\r\n          most extensive carriers and our ability to offer the most versatile\r\n          services\r\n        </div>\r\n      </div>\r\n      <div className=\"picture\">\r\n        <div className=\"bobby\">\r\n          <img className=\"img-bobby\" src=\"images/mutiu.jpg \" alt=\"mie\" />\r\n          <div className=\"bobby-para\">\r\n            Expert in automotive delivery of any kind of products and\r\n            accessories to warehouses and recipients.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","// import \"./App.css\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import { Container } from \"react-bootstrap\";\n// import Footer from \"./components/Footer\";\n// import Header from \"./components/Header\";\n// import HomeScreen from \"./screens/HomeScreen\";\n// import ProductScreen from \"./screens/ProductScreen\";\n// import CartScreen from \"./screens/CartScreen\";\n// import LoginScreen from \"./screens/LoginScreen\";\n// import RegisterScreen from \"./screens/RegisterScreen\";\n// import ProfileScreen from \"./screens/ProfileScreen\";\n// import ShippingScreen from \"./screens/ShippingScreen\";\n// import PaymentScreen from \"./screens/PaymentScreen\";\n// import PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\n\n// function App() {\n//   return (\n//     <Router>\n//       <Header />\n//       <main className=\"py-3\">\n//         <Container>\n//           <Route path=\"/shipping\" component={ShippingScreen} />\n//           <Route path=\"/payment\" component={PaymentScreen} />\n//           <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n\n//           <Route path=\"/login\" component={LoginScreen} />\n//           <Route path=\"/register\" component={RegisterScreen} />\n//           <Route path=\"/profile\" component={ProfileScreen} />\n//           <Route path=\"/product/:id\" component={ProductScreen} />\n//           <Route path=\"/cart/:id?\" component={CartScreen} />\n//           <Route path=\"/\" component={HomeScreen} exact />\n\n//           {/* <div>welcome to shop</div> */}\n//         </Container>\n//       </main>\n//       <Footer />\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/Orderscreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/about\" component={About} />\n\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n            exact\n          />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}